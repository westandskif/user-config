#!/bin/bash

set -o nounset
set -o errexit

XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

NVIM_ROOT="$XDG_DATA_HOME/nvim"
NVIM_CONFIG="$XDG_CONFIG_HOME/nvim"
AUTOGEN_SCRIPTS_DIR="$NVIM_CONFIG/autogen_scripts"

python_version_from_docker_image()
{
    echo "getting python version from docker image: $DOCKER_IMAGE"
    local get_python_version_script='python -c "import sys; print(sys.version.split()[0])"'
    PYTHON_VERSION=$(docker run --rm \
        --name=tmp_for_pyenv \
        --entrypoint=bash "${DOCKER_IMAGE}" \
        -c "${get_python_version_script}")
}

python_copy_docker_image_sitepackages()
{
    echo "copying sitepackages from docker image: $DOCKER_IMAGE"
    local get_python_sitepackages_path='python -c "import site; print([p for p in site.getsitepackages() if \"site-packages\" in p][0])"'
    local docker_tmp_container=tmp_for_nvim
    local docker_tmp_volume=tmp_for_sitepackager_copying

    # find sitepackages path in the docker image
    docker rm -f $docker_tmp_container > /dev/null 2>&1 || true
    local sitepackages_path=$(docker run \
        --name=${docker_tmp_container} \
        --entrypoint=bash "${DOCKER_IMAGE}" \
        -c "${get_python_sitepackages_path}")

    docker cp "${docker_tmp_container}:${sitepackages_path}/." $SITEPACKAGES_PATH
    docker rm -f $docker_tmp_container || true

    #######################################
    ### COPYING VIA NAMED VOLUMES BELOW ###
    #######################################
    # # make sure a named volume is created and empty
    # docker volume inspect $docker_tmp_volume > /dev/null 2>&1 \
    #     && exit_code=$? || exit_code=$?
    # if [[ $exit_code -eq 0 ]]; then
    #     echo "dropping $docker_tmp_volume volume"
    #     docker volume rm $docker_tmp_volume > /dev/null 2>&1
    #     docker volume create $docker_tmp_volume > /dev/null 2>&1
    # fi

    # echo "copying data to named volume - $docker_tmp_volume"
    # docker rm -f $docker_tmp_container > /dev/null 2>&1 || true
    # docker run --rm \
    #     --name=$docker_tmp_container \
    #     -v $docker_tmp_volume:$sitepackages_path \
    #     --entrypoint=bash "${DOCKER_IMAGE}" \
    #     -c 'echo "success"'

    # local volume_data_path=$(docker volume inspect $docker_tmp_volume \
    #     | jq -r ".[0].Mountpoint")

    # sudo rsync \
    #     --recursive \
    #     --whole-file \
    #     --update \
    #     --delete \
    #     --owner \
    #     --group \
    #     --chown="$USER:$USER" \
    #     --include="*/" \
    #     --include="*.py" \
    #     --exclude="*" \
    #     $volume_data_path/ \
    #     $SITEPACKAGES_PATH/
}
