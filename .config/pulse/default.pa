.fail

### Should be after module-*-restore but before module-*-detect
load-module module-switch-on-port-available


### Automatically load driver modules depending on the hardware available
.ifexists module-udev-detect.so
load-module module-udev-detect
.else
### Use the static hardware detection module (for systems that lack udev support)
load-module module-detect
.endif


### Automatically load driver modules for Bluetooth hardware
.ifexists module-bluetooth-policy.so
load-module module-bluetooth-policy
.endif

.ifexists module-bluetooth-discover.so
load-module module-bluetooth-discover
.endif


### Load several protocols
load-module module-dbus-protocol
.ifexists module-esound-protocol-unix.so
load-module module-esound-protocol-unix
.endif
load-module module-native-protocol-unix


### Load additional modules from GSettings. This can be configured with the paprefs tool.
### Please keep in mind that the modules configured by paprefs might conflict with manually
### loaded modules.
.ifexists module-gsettings.so
.nofail
load-module module-gsettings
.fail
.endif


### Make sure we always have a sink around, even if it is a null sink.
load-module module-always-sink


### Honour intended role device property
load-module module-intended-roles


### Automatically suspend sinks/sources that become idle for too long
load-module module-suspend-on-idle


### If autoexit on idle is enabled we want to make sure we only quit
### when no local session needs us anymore.
.ifexists module-console-kit.so
load-module module-console-kit
.endif
.ifexists module-systemd-login.so
load-module module-systemd-login
.endif



# CREATING BEAMFORMING MIC & ECHO-CANCELLED SINK:
#   user_beamforming_mic__source - synthetic mic, which uses beamforming and is to be used as the default source
#   user_echoless_generic__sink - echo cancelled output to be used as the default sink
# ====
load-module module-echo-cancel source_master='alsa_input.pci-0000_07_00.6.HiFi__hw_acp__source' sink_master='alsa_output.pci-0000_07_00.6.HiFi__hw_Generic_1__sink' source_name=user_beamforming_mic__source sink_name=user_echoless_generic__sink source_properties='device.description="User Beamforming Mic"' sink_properties='device.description="User Echoless Speakers/Headphones"' use_master_format=1 use_volume_sharing=0 aec_method='webrtc' aec_args='voice_detection=0 analog_gain_control=0 digital_gain_control=0 beamforming=1 mic_geometry=-0.0267,0,0,0.0267,0,0 target_direction=1.65,0,0'


# APPLYING EQUALIZER TO BEAMFORMING MIC
#   user_beamforming_mic__eq__source - source after equalizer
# ====
load-module module-null-sink sink_name=ladspa_mic_out
load-module module-ladspa-sink sink_name=ladspa_mic_in sink_master=ladspa_mic_out plugin=mbeq_1197 label=mbeq control=6.0,6.0,6.0,6.0,6.0,6.0,6.0,5.5,3.8,0.4,-1.9,-3.2,-1.6,-1.1,2.6
# load-module module-ladspa-sink sink_name=ladspa_mic_in sink_master=ladspa_mic_out plugin=mbeq_1197 label=mbeq control=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
load-module module-loopback source=user_beamforming_mic__source sink=ladspa_mic_in source_dont_move=true sink_dont_move=true
load-module module-remap-source master=ladspa_mic_out.monitor source_name=user_beamforming_mic__eq__source source_properties='device.description="User Beamforming Mic Eq"'

# UNCOMMENT TO LISTEN TO YOUR VOICE AND TUNE control dB ABOVE
#   To restart:
#   >>> systemctl --user restart pulseaudio.service
# 
#   Bands: 50,100,156,220,311,440,622,880,1250,1750,2500,3500,5000,10000,20000
# ====
# load-module module-loopback source=user_beamforming_mic__eq__source


# APPLYING EQUALIZER TO SPEAKER/HEADPHONES
#   ladspa_speaker_in - sink to be processed
# ====
# load-module module-ladspa-sink sink_name=ladspa_speaker_in sink_master=user_echoless_generic__sink plugin=mbeq_1197 label=mbeq control=0.4,2.2,3.2,3.8,1.4,-1.1,-3.0,-3.8,-3.4,-2.7,-0.3,1.2,2.7,4.4,5.2



# SETTINGS DEFAULTS
# ====
# set-default-source alsa_input.pci-0000_07_00.6.HiFi__hw_acp__source
# set-default-source user_beamforming_mic__source

set-default-source user_beamforming_mic__eq__source
set-default-sink user_echoless_generic__sink
